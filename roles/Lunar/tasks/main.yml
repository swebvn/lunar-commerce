---
- name: clone source lunar commerce
  shell: sudo GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git clone git@github.com:swebvn/lucommerce.git /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar

- name: copy env file
  template: src=env.j2 dest=/home/{{ user_domain }}/domains/{{ server_name }}/public_html/.env
  when: check_users_result.stdout != "1"
  tags: lunar

- name: Run composer install
  shell: sudo /usr/local/bin/composer install --no-dev --optimize-autoloader --no-ansi --no-interaction
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar

- name: gen unique key
  shell: sudo php artisan key:generate
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar

- name: Run artisan migrate
  shell: sudo php artisan migrate --seed --force
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar

- name: Run artisan storage
  shell: sudo php artisan storage:link
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar

- name: Run pnpm install and build
  shell: sudo pnpm install && sudo pnpm build
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar

- name: chown user
  shell: sudo chown {{ user_domain }}:{{ group_domain }} -R /home/{{ user_domain }}/domains/{{ server_name }}/public_html/* && sudo chown {{ user_domain }}:{{ group_domain }} -R /home/{{ user_domain }}/domains/{{ server_name }}/public_html/.*
  when: check_users_result.stdout != "1"
  tags: lunar

# - name: create crontab with owner by user
#   shell: echo "0 * * * * php /home/{{ user_domain }}/domains/{{ server_name }}/public_html/artisan schedule:run >> /dev/null 2>&1" > /var/spool/cron/crontabs/{{ user_domain }}
#   when: check_users_result.stdout != "1"
#   tags: lunar

# - name: Change file ownership, group and permissions
#   file:
#     path: /var/spool/cron/crontabs/{{ user_domain }}
#     owner: '{{ user_domain }}'
#     group: crontab
#     mode: '0600'
#   when: check_users_result.stdout != "1"
#   tags: lunar

- name: create horizon systemd
  template: src=horizon.service.j2 dest=/etc/systemd/system/{{ server_name }}.service
  when: check_users_result.stdout != "1"
  tags: lunar

- name: daemon reload
  systemd:
    daemon_reload: true
  when: check_users_result.stdout != "1"
  tags: lunar

- name: start and enable horizon systemd
  systemd:
    name: '{{ server_name }}'
    state: started
    enabled: true
  when: check_users_result.stdout != "1"
  tags: lunar

- name: update register email
  shell: /snap/bin/certbot register -m caotritran.14@gmail.com --agree-tos
  ignore_errors: true
  when: check_users_result.stdout != "1"
  tags: lunar

- name: stop nginx
  systemd:
    name: nginx
    state: stopped
  when: check_users_result.stdout != "1"
  tags: lunar

- name: make sure nginx stopped
  shell: sudo ps aux | grep nginx | grep -v grep | awk '{print $2}' | xargs kill -9
  when: check_users_result.stdout != "1"
  ignore_errors: true
  tags: lunar

- name: request certificate
  shell: sudo /snap/bin/certbot --nginx -d '{{ server_name }}' --force-renewal
  register: result
  when: check_users_result.stdout != "1"
  tags: lunar
  ignore_errors: true

- name: make sure nginx stopped
  shell: sudo ps aux | grep nginx | grep -v grep | awk '{print $2}' | xargs kill -9
  when: check_users_result.stdout != "1"
  ignore_errors: true
  tags: lunar

- name: enable http2 nginx
  shell: sed -i '/listen 443 ssl;/a \    http2 on;' /etc/nginx/sites-available/{{ server_name }}.conf

- name: start nginx
  systemd:
    name: nginx
    state: started
  when: check_users_result.stdout != "1"
  tags: lunar

- name: restart php8.2-fpm
  systemd:
    name: php8.2-fpm
    state: restarted
  when: check_users_result.stdout != "1"
  tags: lunar

- name: Run artisan down
  shell: sudo php artisan down --secret="lunar" --render="errors.maintenance"
  args:
    chdir: /home/{{ user_domain }}/domains/{{ server_name }}/public_html/
  when: check_users_result.stdout != "1"
  tags: lunar


